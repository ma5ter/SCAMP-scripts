; common TOS sizes
b equ 0
w equ 1
dw equ 2

; parameters, uncomment for debug

;active_state equ 1 ; (param) what to do `on` or `off` when active
;watering_start_time equ 700 ; (param) minute of watering start
;duration equ 40 ; (param) watering duration in minutes
;watering_phase_time equ 300 ; (param) duration of watering phase in seconds
;pause_phase_time equ 200 ; (param) duration of pause phase in seconds

; push byte macro
pb macro
 psh (($1 >> 4) & 15)
 nib ($1 & 15)
endm

; push word macro
pw macro
 psh (($1 >> 12) & 15)
 nib (($1 >> 8) & 15)
 psh (($1 >> 4) & 15)
 nib ($1 & 15)
endm

; mov instruction with parameters
up macro
 psh (((($1 & 3) | ($2 << 2)) >> 4) & 15)
 nib (($1 & 3) | ($2 << 2) & 15)
 mov
endm

; exp instruction with parameters
ex macro
 psh ($1 & 3)
 nib ((($3 & 1) << 3) | ($2 & 3))
 exp
endm

; BEGIN

 swp b
 pb HAS_SWITCH
 inp b, b
 pop b
 snz
 bra check_work_state 
 
got_switch
 pop b
 pb SWITCH
 inp b, b
 dup b
 pop b
 snz
 bra check_work_state
 up dw, 1
 pop dw
 up w, 1
 pop w
 
check_work_state
 dup b
 pop b
 snz
 bra work
 swp b
 pop b
 psh ~active_state & 1
 ret
 
work
 pop b
 
start
 swp b
 pop b
 skz
 bra was_in_period ; was in period
 pb was_out_of_period ; was out of period
 jmp b
 
was_in_period
 up w, 3
 dup w
 pb timestamp_min
 for b
 cmp w
 snz
 bra dispose_timers ; set off
 skp
 bra dispose_timers ; set off
 ; check_phase

check_phase
 up w, 3
 dup w
 psh TIMESTAMP
 inp b, w
 cmp w
 snz
 bra switch_phase; switch phase
 skp
 bra switch_phase ; switch phase
 ; continue
 
continue
 psh 1 ; set flag in period
 psh 0
 up b, 6
 ret

dispose_timers
 pop dw
 pop b
 psh 0 ; set flag in period
 psh 0
 bra set_off
 
switch_phase
 pop w
 up b, 2
 psh active_state
 xor b
 pop b
 snz
 bra wwp; was watering phase 
 ; was pause phase

wpp
 psh TIMESTAMP
 inp b, w
 pw watering_phase_time
 add w
 psh 1 ; set flag in period
 psh 0
 bra set_on

wwp
 psh TIMESTAMP
 inp b, w
 pw pause_phase_time
 add w
 psh 1 ; set flag in period
 psh 0
 bra set_off

set_on
 psh active_state & 1
 ret
 
set_off
 psh ~active_state & 1
 ret

was_out_of_period
 pop b
 pb time_now
 for b
 dup w
 pw watering_start_time
 cmp w
 skz
 bra check_in_middle
 pop w
 pb set_duration ; start period
 jmp b
 ;skn
 ;bra dispose ; dispose
check_in_middle
 pw watering_start_time + duration
 dup w
 pw 1439
 cmp w
 skn
 bra two_parts
 swp w
 sub w
 snz
 bra dispose
 skp
 bra dispose
 pb time_now
 for b
 pw watering_start_time
 cmp w
 skn
 bra 1
 bra dispose
 pb start_period ; check in period
 jmp b
 
dispose
 pop w
 psh 0 ; set flag in period
 psh 0
 pb set_off
 jmp b
 
two_parts
 pb time_now
 for b
 pw watering_start_time
 sub w
 skn
 bra after ; after
 pop dw ; earlier
 pw duration - (1440 - watering_start_time)
 swp w
 sub w
 snz
 bra dispose
 skn
 bra start_period
 bra dispose

after
 pw duration
 swp w
 sub w
 up dw, 2
 pop dw
 bra start_period
 
set_duration
 pw duration
start_period
 pb timestamp_min
 for b
 add w
 psh TIMESTAMP
 inp b, w
 pw watering_phase_time
 add w
 psh 1 ; set flag in period
 psh 0
 pb set_on
 jmp b
 
time_now
 pb RT_HOUR
 inp b, w
 pw 60
 mul w
 pb RT_MIN
 inp b, w
 add w
 up b, 2
 jmp b
 
timestamp_min
 psh TIMESTAMP
 inp b, dw
 pw 60
 ex w, dw, 0
 div dw
 ex dw, w, 0
 up b, 2
 jmp b
 